logLevel: warn
database:
  evmJsonRpcCache:
    connectors:
      - id: memory-cache
        driver: memory
      - id: postgres-cache
        driver: postgresql
        postgresql:
          connectionUri: postgres://erpc:erpc@localhost:5432/erpc
      - id: redis-cache
        driver: redis
        redis:
          addr: redis://localhost:6379
      - id: scylladb-cache
        driver: dynamodb
        dynamodb:
          region: DC1
          endpoint: http://localhost:8067

    policies:
      - network: "*"
        method: "*"
        finality: realtime
        empty: allow
        connector: memory-cache
        ttl: 2s
      - network: "*"
        method: "*"
        finality: unfinalized
        empty: allow
        connector: redis-cache
        ttl: 10s
      - network: "*"
        method: "*"
        finality: finalized
        empty: allow
        connector: scylladb-cache
        ttl: 0
  #  Cache is disabled by default. You can also disable it by uncommenting the following line
  #  evmJsonRpcCache: ~ 
server:
  httpHostV4: 0.0.0.0
  httpPortV4: 4000
  # listenV6: false
  # httpHostV6: "[::]"
  # httpPortV6: 5000
  maxTimeout: 50s
metrics:
  enabled: true
  hostV4: 0.0.0.0
  port: 4001
projects:
  - id: main
    networks:
      - architecture: evm
        evm:
          chainId: 1
        failsafe:
          timeout:
            duration: 30s
          retry:
            maxAttempts: 3
            delay: 500ms
            backoffMaxDelay: 10s
            backoffFactor: 0.3
            jitter: 500ms
          hedge:
            delay: 3000ms
            maxCount: 2
      - architecture: evm
        evm:
          chainId: 42161
        failsafe:
          timeout:
            duration: 30s
          retry:
            maxAttempts: 5
            delay: 500ms
            backoffMaxDelay: 10s
            backoffFactor: 0.3
            jitter: 200ms
          hedge:
            delay: 1000ms
            maxCount: 2
    upstreams:
      - id: alchemy-multi-chain-example-1
        endpoint: alchemy://XXXX_YOUR_ALCHEMY_API_KEY_HERE_XXXX
        rateLimitBudget: global
        failsafe:
          timeout:
            duration: 15s
          retry:
            maxAttempts: 2
            delay: 1000ms
            backoffMaxDelay: 10s
            backoffFactor: 0.3
            jitter: 500ms
      - id: tenderly-example-1
        endpoint: tenderly://YOUR_TENDERLY_API_KEY
        rateLimitBudget: global-tenderly
        evm:
          chainId: 1
        failsafe:
          timeout:
            duration: 15s
          retry:
            maxAttempts: 2
            delay: 1000ms
            backoffMaxDelay: 10s
            backoffFactor: 0.3
            jitter: 500ms
      - id: chainstack-example-1
        endpoint: chainstack://YOUR_CHAINSTACK_API_KEY
        rateLimitBudget: global-chainstack
        evm:
          chainId: 1
        failsafe:
          timeout:
            duration: 15s
          retry:
            maxAttempts: 2
            delay: 1000ms
            backoffMaxDelay: 10s
            backoffFactor: 0.3
            jitter: 500ms
      - id: onfinality-multi-chain-example-1
        endpoint: onfinality://YOUR_ONFINALITY_API_KEY
        rateLimitBudget: global-onfinality
        evm:
          chainId: 1
        failsafe:
          timeout:
            duration: 15s
      - id: infura-multi-chain-example-1
        endpoint: infura://${YOUR_INFURA_API_KEY}
        rateLimitBudget: default-budget
        failsafe:
          timeout:
            duration: 15s
          retry:
            maxAttempts: 2
            delay: 1000ms
            backoffMaxDelay: 10s
            backoffFactor: 0.3
      - id: blastapi-chain-42161
        type: evm
        endpoint: https://arbitrum-one.blastapi.io/xxxxxxx-xxxxxx-xxxxxxx
        rateLimitBudget: global-blast
        evm:
          chainId: 42161
        failsafe:
          timeout:
            duration: 15s
          retry:
            maxAttempts: 2
            delay: 1000ms
            backoffMaxDelay: 10s
            backoffFactor: 0.3
            jitter: 500ms
      - id: blastapi-chain-1
        type: evm
        endpoint: https://eth-mainnet.blastapi.io/xxxxxxx-xxxxxx-xxxxxxx
        rateLimitBudget: global-blast
        evm:
          chainId: 1
        failsafe:
          timeout:
            duration: 15s
          retry:
            maxAttempts: 2
            delay: 1000ms
            backoffMaxDelay: 10s
            backoffFactor: 0.3
            jitter: 500ms
      - id: quiknode-chain-42161
        type: evm
        endpoint: https://xxxxxx-xxxxxx.arbitrum-mainnet.quiknode.pro/xxxxxxxxxxxxxxxxxxxxxxxx/
        rateLimitBudget: global-quicknode
        evm:
          chainId: 42161
        failsafe:
          timeout:
            duration: 15s
          retry:
            maxAttempts: 2
            delay: 1000ms
            backoffMaxDelay: 10s
            backoffFactor: 0.3
            jitter: 500ms
      - id: infura-multi-chain-example-1
        endpoint: alchemy://XXXX_YOUR_ALCHEMY_API_KEY_HERE_XXXX
        rateLimitBudget: global
        failsafe:
          timeout:
            duration: 15s
          retry:
            maxAttempts: 2
            delay: 1000ms
            backoffMaxDelay: 10s
            backoffFactor: 0.3
            jitter: 500ms
      # Subsquid Network — BASE
      - id: subsquid-base
        type: evm
        endpoint: subsquid://v2.archive.subsquid.io/network/base-mainnet
        evm:
          chainId: 8453
        # Let JSON-RPC handle "hot" / stateful methods; this upstream is finalized history
        ignoreMethods:
          - "eth_call"
          - "eth_getBalance"
          - "eth_getCode"
          - "eth_getTransactionByHash"
          - "eth_getTransactionReceipt"
          - "eth_getBlockByHash"
          - "eth_getBlockReceipts"
          - "eth_getUncle*"
          - "eth_feeHistory"
          - "eth_gasPrice"
          - "eth_maxPriorityFeePerGas"
          - "eth_blockNumber" # optional: if you want blockNumber from live rpc; else remove to use Subsquid finalized height
        # Tuning
        maxChunk: 10000
        timeout: 30s

      # Subsquid Network — BSC
      - id: subsquid-bsc
        type: evm
        endpoint: subsquid://v2.archive.subsquid.io/network/bsc-mainnet
        evm:
          chainId: 56
        ignoreMethods:
          - "eth_call"
          - "eth_getBalance"
          - "eth_getCode"
          - "eth_getTransactionByHash"
          - "eth_getTransactionReceipt"
          - "eth_getBlockByHash"
          - "eth_feeHistory"
          - "eth_gasPrice"
          - "eth_maxPriorityFeePerGas"
        maxChunk: 10000
        timeout: 30s

      # Your normal JSON-RPC upstreams for realtime/state/misc
      - id: bsc-rpc
        type: evm
        endpoint: https://<your-bsc-node>
        evm:
          chainId: 56

      - id: base-rpc
        type: evm
        endpoint: https://<your-base-node>
        evm:
          chainId: 8453
rateLimiters:
  budgets:
    - id: global-tenderly
      rules:
        - method: '*'
          maxCount: 10000
          period: 1s
    - id: global-chainstack
      rules:
        - method: '*'
          maxCount: 10000
          period: 1s
    - id: global-onfinality
      rules:
        - method: '*'
          maxCount: 10000
          period: 1s
    - id: default-budget
      rules:
        - method: '*'
          maxCount: 10000
          period: 1s
    - id: global-blast
      rules:
        - method: '*'
          maxCount: 1000
          period: 1s
    - id: global-quicknode
      rules:
        - method: '*'
          maxCount: 300
          period: 1s
